#user  nobody;
#user  www www;
worker_processes  8;
worker_rlimit_nofile 65535;

error_log   /var/log/nginx/error.log;
#pid        /var/run/nginx.pid;

events {
    use epoll;
    worker_connections  20480;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    gzip on;
    server_tokens off;     #关闭版本显示
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    #gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";
    keepalive_timeout  60;
    #expires 60s;
    #client_header_buffer_size 512k;
    #large_client_header_buffers 4 512k; 
    
    server {
            listen         80 default backlog=1024;
            server_name     localhost;
            
            access_log  /var/log/nginx/access.log  main;
            #error_log  /var/log/nginx/error.log  info;  
            #server_name_in_redirect  off;
            location / {
                    root  /usr/local/nginx/html;
                    index index.html;
            }
    }


    upstream webserver8041 {
    ip_hash;
    server node1_nginx:8041 weight=10 max_fails=10 fail_timeout=30;
    server node2_nginx:8041 weight=10 max_fails=10 fail_timeout=30;
    }

    upstream webserver8064 {
        ip_hash;
        server node1_nginx:8064 weight=10 max_fails=10 fail_timeout=30;
        server node2_nginx:8064 weight=10 max_fails=10 fail_timeout=30;
    }

    upstream webserver8065 {
        ip_hash;
        server node1_nginx:8065 weight=10 max_fails=10 fail_timeout=30;
        server node2_nginx:8065 weight=10 max_fails=10 fail_timeout=30;
    }
 
        
    # HTTPS server
    #server {
    #    listen       443;
    #    server_name  localhost;
    #    ssl                  on;
    #    ssl_certificate /usr/local/nginx/conf/ssl/server.crt;
    #    ssl_certificate_key /usr/local/nginx/conf/ssl/server.key;
    #    ssl_session_timeout  5m;
    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    
    include ./conf.d/*.conf;
}

# 转发 tcp负载均衡
stream {
    upstream gosvr_8051 {
        hash $remote_addr consistent; 
        server node1_app:8051;
        server node2_app:8051;
    }
    
    upstream gosvr_8052 {
        hash $remote_addr consistent; 
        server node1_app:8052;
        server node2_app:8052;
    }
    
    upstream gosvr_8053 {
        hash $remote_addr consistent; 
        server node1_app:8053;
        server node2_app:8053;
    }
    
    # listen####    
    server {
    listen 8051;
    proxy_pass gosvr_8051;
    }
    
    server {
    listen 8052;
    proxy_pass gosvr_8052;
    }
    
    server {
    listen 8053;
    proxy_pass gosvr_8053;
    }

}
